import React from "react";
import { useForm } from "react-hook-form";
import "./LoginForm.scss";
import { useLoginMutation } from "../../redux/apiSlice";
import { useDispatch } from "react-redux";
import { setToken } from "../../redux/slices/tokenSlices";

const LoginForm = () => {
  const dispatch = useDispatch()
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm();
  const [login, { isLoading, error }] = useLoginMutation();

  const onSubmit = async (data) => {
    const formattedData = {
      username: data.login, 
      password: data.password,
    };
  
    console.log("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ API:", JSON.stringify(formattedData));
  
    try {
      const response = await login(formattedData).unwrap();
      console.log("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥:", response);
      
      if (response.token) {
        dispatch(setToken(response.token));
        localStorage.setItem("token", response.token);
        window.location.href = "/";
      } else {
        console.error("‚ö†Ô∏è –¢–æ–∫–µ–Ω –Ω–µ –ø–æ–ª—É—á–µ–Ω");
      }
    } catch (err) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:", err);
    }
  };
  

  return (
    <div className="login-container">
      <form className="login-form" onSubmit={handleSubmit(onSubmit)}>
        <h2>–í—Ö–æ–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç</h2>

        <label className="form-label">
          –õ–æ–≥–∏–Ω *
          <input
            type="text"
            className={`form-input ${errors.login ? "input-error" : ""}`}
            {...register("login", {
              required: "–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω",
              minLength: { value: 3, message: "–õ–æ–≥–∏–Ω –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 3 —Å–∏–º–≤–æ–ª–æ–≤" },
              maxLength: { value: 20, message: "–õ–æ–≥–∏–Ω –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å 20 —Å–∏–º–≤–æ–ª–æ–≤" },
              pattern: { value: /^[a-zA-Z0-9_]+$/, message: "–õ–æ–≥–∏–Ω –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã –∏ _" },
            })}
          />
          {errors.login && <span className="error-text">{errors.login.message}</span>}
        </label>

        <label className="form-label">
          –ü–∞—Ä–æ–ª—å *
          <input
            type="password"
            className={`form-input ${errors.password ? "input-error" : ""}`}
            {...register("password", {
              required: "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å",
              minLength: { value: 5, message: "–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 6 —Å–∏–º–≤–æ–ª–æ–≤" },
            })}
          />
          {errors.password && <span className="error-text">{errors.password.message}</span>}
        </label>

        <button type="submit" className="submit-button" disabled={isLoading}>
          {isLoading ? "–í—Ö–æ–¥..." : "–í–æ–π—Ç–∏"}
        </button>

        {error && <p className="error-text">–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: {error.data?.message || "–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ"}</p>}
      </form>
    </div>
  );
};

export default LoginForm;
